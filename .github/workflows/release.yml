name: Release

on:
  push:
    tags: ['v*']
    branches: ['release-v*']
  workflow_dispatch:

jobs:
  unit-tests:
    uses: ./.github/workflows/unit-tests.yml

  integration-tests:
    uses: ./.github/workflows/integration-tests.yml
  
  eslint:
    uses: ./.github/workflows/eslint.yml
  
  prettier:
    uses: ./.github/workflows/prettier.yml

  commitlint:
    uses: ./.github/workflows/commitlint.yml
    
  release:
    name: Release and issue
    needs:
      - unit-tests
      - integration-tests
      - eslint
      - prettier
      - commitlint
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Output required data
        id: data-output
        run: |
          previousTag=$(git --no-pager tag --sort=creatordate --merged | tail -2 | head -1)
          lastTag=$(git --no-pager tag --merged | tail -1)
          echo "previousTag=${previousTag}" >> $GITHUB_OUTPUT
          echo "lastTag=${lastTag}" >> $GITHUB_OUTPUT
          echo "date=$(date +'%A %d %B %Y %H:%M:%S %:z')" >> $GITHUB_OUTPUT 
      
      - name: Check that our tag is the last one in timeline
        run: |
          test "${{ steps.data-output.outputs.previousTag }}" = "${{ steps.data-output.outputs.lastTag }}" -o "$(git --no-pager tag --list | wc -l)" -eq "1"

      - if: success()
        name: Create changelog
        id: create-changelog
        uses: ardalanamini/auto-changelog@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          release-name: ${{ github.ref_name }}
          semver: true
      
      - if: github.ref_type == 'tag'
        name: Create release branch if new tag is pushed
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: 'release-${{ github.ref_name }}'
          sha: '${{ github.event.push.head.sha }}'

      - if: success()
        name: Create release issue or update existing one
        id: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          VERSION: ${{ github.ref_name }}
          DATE: ${{ steps.data-output.outputs.date }}
          CHANGELOG: ${{ steps.create-changelog.outputs.changelog }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUTHOR: ${{ github.actor }}
        with:
          filename: ./.github/ISSUE_TEMPLATE.md
          update_existing: true
          search_existing: all

      - name: Add test results link
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ steps.create-issue.outputs.number }}
          body: |
            - Tests results #${{ github.run_id }} are available at ${{github.server_url}}/${{ github.repository }}/actions/runs/${{github.run_id}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
    outputs:
      issue-number: ${{ steps.create-issue.outputs.number }}

  deploy:
    runs-on: ubuntu-latest
    name: Build and deploy
    needs: release
    env:
      PUBLIC_URL: https://bernizhel.github.io/infrastructure/
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - if: success()
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-project
          path: ./build
          retention-days: 14

      - if: success()
        name: Deploy with gh-pages
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npx gh-pages -d build -u "github-actions-bot <support+actions@github.com>"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Add deploy link
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ needs.release.outputs.issue-number }}
          body: |
            - Deploy #${{ github.run_id }} is available at ${{ env.PUBLIC_URL }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Close the issue
        uses: peter-evans/close-issue@v3
        with:
          issue-number: ${{ needs.release.outputs.issue-number }}
          comment: |
            - All done. Closing the issue
